/**
 * Master build file for johnburbridge.com
 * 
 * @author jburbridge
 * @since Oct 16, 2011
 */

import java.text.DateFormat;
import java.text.SimpleDateFormat;

apply plugin: 'groovy';

/**
 * reset the global version if this is a snapshot build
 */
def globalVersion = new Version(currentVersion);

allprojects {

    version = globalVersion;
    status = version.status;
    
    /*
     * Looks like the latest artifactory plug-in doesn't work with gradle 1.0-milestone > 3
     * so we're going the bare-knuckled route and using gradle's native repository / no-frills approach
     * (see :apps:uploadArchives and :webapps:uploadArchives)
     * 
     * apply plugin: 'artifactory';
     */
    repositories {
        maven {
            name 'allCombinedRepos';
             url "${repositoryUrl}";
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.0'
}

class Version {
    String originalVersion
    String thisVersion
    String status
    Date buildTime

    Version(String versionValue) {
        buildTime = new Date()
        originalVersion = versionValue
        if (originalVersion.endsWith('-SNAPSHOT')) {
            status = 'integration'
            thisVersion = originalVersion.substring(0, originalVersion.length() - 'SNAPSHOT'.length()) + getTimestamp()
        } else {
            status = 'release'
        }
    }

    String getTimestamp() {
        // Convert local file timestamp to UTC
        def format = new SimpleDateFormat('yyyyMMddHHmmss')
        format.setCalendar(Calendar.getInstance(TimeZone.getTimeZone('UTC')));
        return format.format(buildTime)
    }

    String toString() {
        thisVersion
    }
}
