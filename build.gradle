/**
 * Master build file for johnburbridge.com
 * 
 * @author jburbridge
 * @since Oct 16, 2011
 */

import java.text.DateFormat;
import java.text.SimpleDateFormat;

apply plugin: 'groovy';

/**
 * reset the global version if this is a snapshot build
 */
def globalVersion = new Version(currentVersion);

allprojects {

    version = globalVersion;
    status = version.status;
    
    /*
     * Looks like the latest artifactory plug-in doesn't work with gradle 1.0-milestone > 3
     * so we're going the bare-knuckled route and using gradle's native repository / no-frills approach
     * (see :apps:uploadArchives and :webapps:uploadArchives)
     * 
     * apply plugin: 'artifactory';
     */
    repositories {
        mavenRepo url: "${repositoryUrl}";
    }
}
/*
 * uncomment this once we get artifactory working agian
 * 
artifactory {
    contextUrl = "${artifactoryRoot}"
    publish {
        repository {
            repoKey = 'gradle-local' //The Artifactory repository key to publish to
            username = "${artifactory_user}" //The publisher user name
            password = "${artifactory_password}" //The publisher password
            ivy {
                //Optional section for configuring Ivy publication (when publishIvy = true). Assumes Maven repo layout if If not specified
                ivyLayout = '[organization]/[module]/ivy-[revision].xml'
                artifactLayout = '[organization]/[module]/[revision]/[module]-[revision](-[classifier]).[ext]'
                mavenCompatible = false //Convert any dots in an [organization] layout value to path separators, similar to Maven's groupId-to-path conversion. True if not specified
            }
        }
        defaults {
            publishConfigs('archives', 'published')
            properties = ['build.status': "$it.project.status".toString()]
            publishPom = false         //Publish generated POM files to Artifactory (true by default)
            publishIvy = true         //Publish generated Ivy descriptor files to Artifactory (true by default)
        }
    }
    resolve {
        repoKey = 'gradle'
    }
}
*/

task wrapper(type: Wrapper) {
    gradleVersion = '1.0-milestone-6'
}

class Version {
    String originalVersion
    String thisVersion
    String status
    Date buildTime

    Version(String versionValue) {
        buildTime = new Date()
        originalVersion = versionValue
        if (originalVersion.endsWith('-SNAPSHOT')) {
            status = 'integration'
            thisVersion = originalVersion.substring(0, originalVersion.length() - 'SNAPSHOT'.length()) + getTimestamp()
        } else {
            status = 'release'
        }
    }

    String getTimestamp() {
        // Convert local file timestamp to UTC
        def format = new SimpleDateFormat('yyyyMMddHHmmss')
        format.setCalendar(Calendar.getInstance(TimeZone.getTimeZone('UTC')));
        return format.format(buildTime)
    }

    String toString() {
        thisVersion
    }
}
