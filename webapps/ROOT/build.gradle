/**
 * This is the site's ROOT webapp project
 * @author jburbridge
 */

description = "The ROOT webapp for johnburbridge.com";

def cargoLocalPort = 9090;

sourceSets {
    integration
}

dependencies {

    compile project(":common"), 
        'javax.mail:mail:1.4.5', 
        'javax.activation:activation:1.1.1';
        
    testCompile "org.mockito:mockito-all:1.8.5",
        "junit:junit:4.+";
        
    integrationCompile "junit:junit:4.+", 
        sourceSets.main.output, 
        configurations.testCompile, 
        sourceSets.test.output;
        
    integrationRuntime configurations.testRuntime;
}

/**
 * deploys the newly built war file to a remote tomcat instance.
 * the remote closure below lists the default values for the deployment
 * which can be overriden from the command line thusly:
 * gradle -Pcargo.port=8081 -Pcargo.hostname=foo.bar.com \
 *   -Pusername=myusername -Pcargo.password=s3cr3tpwd cargoDeployRemote 
 **/
cargo {
    containerId = 'tomcat7x';
    port = cargoLocalPort;
    context = 'ROOT';
    
    remote {
        hostname = 'localhost';
        username = 'jburbridge';
    }
    local {
        homeDir = file(project.rootDir.toString() + tomcatHome);
    }
}

/**
 * Defines the test task for the intergration source set
 **/
task integrationTest(type: Test) {
    testClassesDir = sourceSets.integration.output.classesDir;
    classpath = sourceSets.integration.runtimeClasspath;
}

// slot the integration tests into our build cycle -  after war, assembly and regular checks, but before build
cargoStartLocal.dependsOn([assemble, check, project(':install').explodeTomcatServer]);
integrationTest.dependsOn(cargoStartLocal);
cargoStopLocal.dependsOn(integrationTest);
build.dependsOn(cargoStopLocal);
